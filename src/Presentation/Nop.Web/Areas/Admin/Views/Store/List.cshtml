@model StoreSearchModel

@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Stores").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Stores");
}
@{
    const string hideSearchBlockAttributeName = "ProductListPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Configuration.Stores")
    </h1>
    <div class="pull-right">
        <a asp-action="Create" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.StoreListButtons })
    </div>
</div>

<form asp-controller="Store" asp-action="List" method="post">
    <div class="panel-group">
        <div class="panel panel-default panel-search">
            <div class="panel-body">
                <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                    <div class="search-text">@T("Admin.Common.Search")</div>
                    <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                    <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                </div>

                <div class="search-body @(hideSearchBlock ? "closed" : "")">
                    <div class="row">
                        <div class="col-md-7">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="SearchStoreName" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="SearchStoreName" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-7 col-md-offset-5">
                            <button type="button" id="search-stores" class="btn btn-primary btn-search">
                                <i class="fa fa-search"></i>
                                @T("Admin.Common.Search")
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</form>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    @await Html.PartialAsync("Table", new DataTablesModel
               {
                   Name = "stores-grid",
                   UrlRead = new DataUrl("List", "Store", null),
                   Length = Model.PageSize,
                   SearchButtonId = "search-stores",
                   LengthMenu = Model.AvailablePageSizes,
                   Filters = new List<FilterParameter>
                            {
                                new FilterParameter(nameof(Model.SearchStoreName)),
                            },
                   ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(StoreModel.Name))
                            {
                                Title = T("Admin.Configuration.Stores.Fields.Name").Text
                            },
                            new ColumnProperty(nameof(StoreModel.Url))
                            {
                                Title = T("Admin.Configuration.Stores.Fields.Url").Text
                            },
                            new ColumnProperty(nameof(StoreModel.DisplayOrder))
                            {
                                Title = T("Admin.Configuration.Stores.Fields.DisplayOrder").Text,
                                ClassName =  NopColumnClassDefaults.CenterAll
                            },
                            new ColumnProperty(nameof(StoreModel.Id))
                            {
                                Title = T("Admin.Common.Edit").Text,
                                Width = "100",
                                ClassName =  NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("Edit"))
                            }
                        }
               })
                </div>
            </div>
        </div>
    </div>
</div>